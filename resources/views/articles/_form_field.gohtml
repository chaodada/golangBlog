{{define "form-fields"}}
  <div class="form-group mt-3">
    <label for="title">标题</label>
    <input type="text" class="form-control {{if .Errors.title }}is-invalid {{end}}" name="title"
           value="{{ .Article.Title }}" required>
    {{ with .Errors.title }}
      <div class="invalid-feedback">
        {{ . }}
      </div>
    {{ end }}
  </div>


  {{ $cate_id := 0 }}
  {{ if .Article.CategoryID }}
    {{ $cate_id = .Article.CategoryID }}
  {{end}}
  <div class="form-group  mt-3">
    <label for="category_id">栏目</label>
    <select name="category_id" class="form-control {{if .Errors.category_id }} is-invalid {{end}}" required>
      <option value="">选择栏目</option>
      {{ range $category := .Categories }}
        {{/*        <option {{if eq.Article.CategoryID $category.ID }} selected="selected" {{end}} value="{{ $category.ID }}">{{ $category.Name }}</option>*/}}
        <option {{if eq $cate_id $category.ID }} selected="selected" {{end}}
                value="{{ $category.ID }}">{{ $category.Name }}</option>
      {{ end }}
    </select>
    {{ with .Errors.category_id }}
      <div class="invalid-feedback">
        {{ . }}
      </div>
    {{ end }}
  </div>


  <div class="form-group mt-3">
    <label for="body">内容</label>
    <textarea name="body" cols="30" rows="10"
              class="form-control {{if .Errors.body }}is-invalid {{end}}">{{ .Article.Body }}</textarea>
    {{ with .Errors.body }}
      <div class="invalid-feedback">
        {{ . }}
      </div>
    {{ end }}
  </div>





  <script>
    easyMDE = new EasyMDE({
      element: document.querySelector("textarea[name='body']"), // 选中节点
      initialValue: document.querySelector("textarea[name='body']").value,
      toolbarTips: true, // 工具栏 按钮提示
      autosave: { // 自动保存
        enabled: false, // 自动保存文本 默认为false
        uniqueId: "edit_art_{{ $cate_id }}", // 自动保存唯一ID
        delay: 10000, // 自动保存事件间隔 毫秒
        timeFormat: {
          locale: 'zh-US',
          format: {
            year: 'numeric',
            month: 'long',
            day: '2-digit',
            hour: '2-digit',
            minute: '2-digit',
            second: '2-digit'
          }
        }, // 自动保存时间显示
        text: "自动保存于: " // 自动提示
      },
      lineNumbers: true, // 显示行号
      insertTexts: {
        image: ["![](http://", ")"], // 图片
        link: ["[", "](http://)"],   // 链接
        table: ["", "\n\n| 列1标题 | 列2标题 | 列3标题 |\n| -------  | -------- | -------- |\n| 列1内容 | 列2内容 | 列3内容 |\n\n"], // 表格
      },
      // showIcons: ["code", "table"],
      // strikethrough 删除线
      // code 代码
      // table 表格
      // redo 前进
      // undo 后退
      // heading-bigger 标题变大
      // heading-smaller 标题变小
      // clean-block 清除格式
      // horizontal-rule 分割线
      // upload-image 图片上传
      showIcons: ['upload-image', 'strikethrough', 'code', 'table', 'redo', 'undo', 'heading-bigger', 'heading-smaller', 'clean-block', 'horizontal-rule'],
      status: ["autosave", "lines", "words", "cursor", "upload-image"],
      // 隐藏插入图片
      hideIcons: ['image'],
      // showIcons: ['upload-image'],
      // promptURLs: true,
      // promptTexts: {
      //   // image: "Custom prompt for URL:",
      //   link: "Custom prompt for URL:",
      // },
      uploadImage: true,  // 开启图片上传
      imageMaxSize: 1024 * 1024 * 10, // 图片上传大小
      imageAccept: "image/png,image/jpeg,image/gif,image/jpg", // 图片类型
      // imageUploadFunction:function (imageMaxSize, imageAccept, imageUploadEndpoint , imageCSRFToken) {
      //   console.log(imageMaxSize)
      //   console.log(imageAccept)
      //   console.log(imageUploadEndpoint)
      //   console.log(imageCSRFToken)
      // },
      imageUploadEndpoint: '/api/upload', // 图片上传接口
      imageTexts: {
        sbInit: '允许从剪贴板粘贴或者拖拽上传图片',
        sbOnDragEnter: '拖拽图片上传',
        sbOnDrop: '上传图片 #images_names#',
        sbProgress: '上传中 #file_name#: #progress#%',
        sbOnUploaded: '上传 #image_name#',
        sizeUnits: ' B, KB, MB',
      },
      errorMessages: {
        noFileGiven: '必须选择一个文件',
        typeNotAllowed: '不允许使用该图片类型',
        fileTooLarge: '图片 #image_name# 太大了 (#image_size#) 最大支持 #image_max_size#',
        importError: '上传图片出现问题 #image_name#.',
      },
      errorCallback: function (errorMessage) {
        console.log(errorMessage);
      },
      // renderingConfig: {
      //   markedOptions: {
      //     sanitize: true,
      //   }
      // }
      // renderingConfig: {
      //   codeSyntaxHighlighting: true,
      //   hljs: hljs.initHighlightingOnLoad(),
      // },
    });

  </script>





{{ end }}